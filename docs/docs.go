// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/device": {
            "get": {
                "description": "get all device types from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "get all device types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.DeviceType"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/device"
                            }
                        }
                    }
                },
                "x-order": 1
            },
            "post": {
                "description": "create device type for the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "create device type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "SUCCESS",
                                "MSG": "deivce created with name of {name}",
                                "Action": "none"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "device type name already exists",
                                "Action": "POST /api/v1/device?name={newName}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "failed to create device",
                                "Action": "POST /api/v1/device?name={newName}"
                            }
                        }
                    }
                },
                "x-order": 4
            }
        },
        "/device/{id}": {
            "get": {
                "description": "get device type by ID from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "get device type by ID",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "$ref": "#/definitions/models.DeviceType"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "device id is not a number",
                                "Action": "GET /api/v1/device/{id}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/device/{id}"
                            }
                        }
                    }
                },
                "x-order": 2
            }
        },
        "/device/{id}/name": {
            "patch": {
                "description": "update device type by name ID from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "update device type by name ID",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "SUCCESS",
                                "MSG": "device type {id} updated with a nof of {newName}",
                                "Action": "none"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "device name is missing",
                                "Action": "PATCH /api/v1/device/{id}/name?name={newName}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "something went wrong + sql.Err()",
                                "Action": "PATCH /api/v1/device/{id}/name?name={newName}"
                            }
                        }
                    }
                },
                "x-order": 3
            }
        },
        "/device/{id}/status": {
            "patch": {
                "description": "update device type by status ID from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "update device type by status ID",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "type": "string",
                        "description": "Device Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "SUCCESS",
                                "MSG": "device type {id} updated with status of {newStatus}",
                                "Action": "none"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "status must be either active or inactive",
                                "Action": "PATCH /api/v1/device/{id}/status?status={newStatus}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "something went wrong + sql.Err()",
                                "Action": "PATCH /api/v1/device/{id}/status?status={newStatus}"
                            }
                        }
                    }
                },
                "x-order": 3
            }
        },
        "/equipment": {
            "get": {
                "description": "get all equipment with manufacturers from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get all equipments with",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "set to true to get all equipment, otherwise only active equipment is returned",
                        "name": "all",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Equipment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment?all=true"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create equipment in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "create equipment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "serial number",
                        "name": "sn",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "manufacturer id",
                        "name": "manufacturer",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "device id",
                        "name": "device",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                                    "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "SUCCESS",
                                "MSG": "equipment created",
                                "Action": "none"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "cannot create, manufacturer is inactive",
                                "Action": "GET /api/v1/manufacturer/{id}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "failed to decode response from /api/v1/manufacturer",
                                "Action": "GET /api/v1/manufacturer/{id}"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "update equipment in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "update equipment",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "equipment id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "serial number",
                        "name": "sn",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "manufacturer id",
                        "name": "manufacturer_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "device id",
                        "name": "device_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                                "$ref": "#/definitions/models.JsonResponse"
                            },
                        "examples": {
                            "application/json": {
                                "Status": "SUCCESS",
                                "MSG": "equipment updated",
                                "Action": "none"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "id is not a number",
                                "Action": "PATCH /api/v1/equipment?id={id}&sn={sn}&manufacturer_id={manufacturer_id}&device_id={device_id}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "PATCH /api/v1/equipment?id={id}&sn={sn}&manufacturer_id={manufacturer_id}&device_id={device_id}"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/device/{device_id}/manufacturer/{manufacturer_id}": {
            "get": {
                "description": "get equipment by device id and manufacturer id from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get equipment by device id and manufacturer id",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "device id",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "manufacturer id",
                        "name": "manufacturer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "set to true to get all equipment, otherwise only active equipment is returned",
                        "name": "all",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Equipment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "device id is not a number",
                                "Action": "GET /api/v1/equipment/device/{device_id}/manufacturer/{manufacturer_id}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment/device/{device_id}/manufacturer/{manufacturer_id}"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/device/{id}": {
            "get": {
                "description": "get equipment by device id from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get equipment by device id",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "device id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "set to true to get all equipment, otherwise only active equipment is returned",
                        "name": "all",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Equipment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "device type does not exist",
                                "Action": "GET /api/v1/equipment/device/{device_id}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment/device/{device_id}"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/id": {
            "get": {
                "description": "get equipment by auto_id from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get equipment by auto ID",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "auto_id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "$ref": "#/definitions/models.Equipment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "id is not a number",
                                "Action": "GET /api/v1/equipment/id?id={id}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment/id?id={id}"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/manufacturer/{id}": {
            "get": {
                "description": "get equipment by manufacturer id from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get equipment by manufacturer id",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "manufacturer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "set to true to get all equipment, otherwise only active equipment is returned",
                        "name": "all",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Equipment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "manufacturer does not exist",
                                "Action": "GET /api/v1/manufacturer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment/manufacturer/{id}?all=true"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/sn": {
            "get": {
                "description": "get equipment by serial number from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get equipment by serial number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "serial number",
                        "name": "sn",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "$ref": "#/definitions/models.Equipment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "serial number must start with SN-",
                                "Action": "GET /api/v1/equipment/sn?sn={sn}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment/sn?sn={sn}"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "update equipment serial number in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "update equipment serial number",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "equipment id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "serial number",
                        "name": "sn",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "SUCCESS",
                                "MSG": "serial number updated",
                                "Action": "none"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "serial number does not exist",
                                "Action": "GET /api/v1/equipment/sn-like/{sn}?all=true"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "PATCH /api/v1/equipment/sn?sn={newsn}&id={id}"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/sn-like/{sn}": {
            "get": {
                "description": "get equipment like serial number from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get equipment like serial number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "serial number",
                        "name": "sn",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "set to true to get all equipment, otherwise only active equipment is returned",
                        "name": "all",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Equipment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "no equipment found",
                                "Action": "GET /api/v1/equipment/sn-like/{sn}?all=true"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment/sn-like/{sn}?all=true"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/sn-like/{sn}/manufacturer/{manufacturer_id}/device/{device_id}": {
            "get": {
                "description": "get equipment by manufacturer id like serial number and device id from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get equipment by manufacturer id like serial number and device id",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "manufacturer id",
                        "name": "manufacturer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "device id",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "serial number",
                        "name": "sn",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "set to true to get all equipment, otherwise only active equipment is returned",
                        "name": "all",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Equipment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "device id does not exist",
                                "Action": "GET /api/v1/device"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment/sn-like/{sn}/manufacturer/{manufacturer_id}/device/{device_id}?all=true"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/sn/{sn}/device/{device_id}": {
            "get": {
                "description": "get equipment by device id and serial number from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get equipment by device id and serial number",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "device id",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "serial number",
                        "name": "sn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "$ref": "#/definitions/models.Equipment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "equipment does not exist",
                                "Action": "GET /api/v1/equipment"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment/sn/{sn}/device/{device_id}"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/sn/{sn}/manufacturer/{manufacturer_id}": {
            "get": {
                "description": "get equipment by manufacturer id and serial number from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get equipment by manufacturer id and serial number",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "manufacturer id",
                        "name": "manufacturer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "serial number",
                        "name": "sn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "$ref": "#/definitions/models.Equipment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "manufacturer id is not a number",
                                "Action": "GET /api/v1/equipment/sn/{sn}/manufacturer/{manufacturer_id}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment/sn/{sn}/manufacturer/{manufacturer_id}"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/sn/{sn}/manufacturer/{manufacturer_id}/device/{device_id}": {
            "get": {
                "description": "get equipment by manufacturer id and serial number and device id from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "get equipment by manufacturer id and serial number and device id",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "manufacturer id",
                        "name": "manufacturer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "device id",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "serial number",
                        "name": "sn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "$ref": "#/definitions/models.Equipment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "device id is not a number",
                                "Action": "GET /api/v1/equipment/sn/{sn}/manufacturer/{manufacturer_id}/device/{device_id}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/equipment/sn/{sn}/manufacturer/{manufacturer_id}/device/{device_id}"
                            }
                        }
                    }
                }
            }
        },
        "/equipment/{id}/status": {
            "patch": {
                "description": "update equipment status in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "equipment"
                ],
                "summary": "update equipment status",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "equipment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "\"active\"",
                            "\"inactive\""
                        ],
                        "type": "string",
                        "description": "equipment status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "SUCCESS",
                                "MSG": "equipment status updated to {newStatus}",
                                "Action": "none"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "status must be either active or inactive",
                                "Action": "PATCH /api/v1/equipment/{id}/status?status={status}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "PATCH /api/v1/equipment/{id}/status?status={status}"
                            }
                        }
                    }
                }
            }
        },
        "/manufacturer": {
            "get": {
                "description": "get all manufacturers from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manufacturer"
                ],
                "summary": "get all manufacturers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Manufacturer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/manufacturer"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create manufacturer for the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manufacturer"
                ],
                "summary": "create manufacturer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manufacturer Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "SUCCESS",
                                "MSG": "manufacturer created with name of {name}",
                                "Action": "none"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "manufacturer type already exists",
                                "Action": "GET /api/v1/manufacturer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "POST /api/v1/manufacturer?name={name}"
                            }
                        }
                    }
                },
                "x-order": 4
            }
        },
        "/manufacturer/{id}": {
            "get": {
                "description": "get a manufacturer by ID from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manufacturer"
                ],
                "summary": "get a manufacturer by ID",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Manufacturer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JsonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "MSG": {
                                            "$ref": "#/definitions/models.Manufacturer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "id is not a number",
                                "Action": "GET /api/v1/manufacturer/{id}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "GET /api/v1/manufacturer/{id}"
                            }
                        }
                    }
                }
            }
        },
        "/manufacturer/{id}/name": {
            "patch": {
                "description": "update a manufacturer name by ID from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manufacturer"
                ],
                "summary": "update a manufacturer name by ID",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Manufacturer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Manufacturer Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "SUCCESS",
                                "MSG": "manufacturer with id: {id} updated name to {name}",
                                "Action": "none"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "name cannot be empty",
                                "Action": "PATCH /api/v1/manufacturer/{id}/name?name={name}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "could not connect to database",
                                "Action": "PATCH /api/v1/manufacturer/{id}/name?name={name}"
                            }
                        }
                    }
                }
            }
        },
        "/manufacturer/{id}/status": {
            "patch": {
                "description": "update a manufacturer status by ID from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manufacturer"
                ],
                "summary": "update a manufacturer status by ID",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Manufacturer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "type": "string",
                        "description": "Manufacturer Status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "SUCCESS",
                                "MSG": "manufacturer with id: {id} updated status to {status}",
                                "Action": "none"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "status must be either active or inactive",
                                "Action": "PATCH /api/v1/manufacturer/{id}/status?status={status}"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.JsonResponse"
                        },
                        "examples": {
                            "application/json": {
                                "Status": "ERROR",
                                "MSG": "cannot connect to database",
                                "Action": "PATCH /api/v1/manufacturer/{id}/status?status={status}"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.DeviceType": {
            "description": "DeviceType is a struct for device type",
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID is an int32 for device type id",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Name is a string for device type name",
                    "type": "string",
                    "example": "computer"
                },
                "status": {
                    "description": "Status is a string for device type status either active or inactive",
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "models.Equipment": {
            "description": "Equipment is a struct for equipment",
            "type": "object",
            "properties": {
                "auto_id": {
                    "description": "AutoID is an int32 for equipment auto id",
                    "type": "integer",
                    "example": 1
                },
                "device_type_id": {
                    "description": "DeviceTypeID is an int32 for device id",
                    "type": "integer",
                    "example": 1
                },
                "manufacturer_id": {
                    "description": "ManufacturerID is an int32 for manufacturer id",
                    "type": "integer",
                    "example": 1
                },
                "serial_number": {
                    "description": "SerialNumber is a string for equipment serial number",
                    "type": "string",
                    "example": "SN-0123456abcdef"
                },
                "status": {
                    "description": "Status is a string for equipment status either active or inactive",
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "models.JsonResponse": {
            "description": "JsonResponse is a struct for response JSON message",
            "type": "object",
            "properties": {
                "Status": {
                    "description": "Status is a string for response status",
                    "type": "string",
                    "example": "SUCCESS"
                },
                "MSG": {
                    "description": "Message is an interface for response message can be string, models.DeviceType, models.Manufacturer, models.Equipment"
                },
                "Action": {
                    "description": "Action is a string for response action",
                    "type": "string",
                    "example": "none"
                }
            }
        },
        "models.Manufacturer": {
            "description": "Manufacturer is a struct for manufacturer",
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID is an int32 for manufacturer id",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Name is a string for manufacturer name",
                    "type": "string",
                    "example": "Apple"
                },
                "status": {
                    "description": "Status is a string for manufacturer status either active or inactive",
                    "type": "string",
                    "example": "active"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Equipment API",
	Description:      "This is the API to interact with Equipment database",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
